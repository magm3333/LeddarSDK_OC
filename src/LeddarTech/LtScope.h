////////////////////////////////////////////////////////////////////////////////////////////////////
/// \file   LeddarTech/LtScope.h
///
/// \brief  Declares the LtScope class
////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

namespace LeddarUtils
{
////////////////////////////////////////////////////////////////////////////////////////////////////
/// \class  LtScope
///
/// \brief  A class to set a value when it goes out of scope.
///
/// \author David Levy
/// \date   October 2018
///
/// \tparam T   Generic type parameter.
////////////////////////////////////////////////////////////////////////////////////////////////////
    template<class T>
    class LtScope
    {
    public:
        LtScope( T *aVarToSet, T aValue ): mVarToSet( aVarToSet ), mValue( aValue ) {}
        ~LtScope() { *mVarToSet = mValue; }

    private:
        T *mVarToSet;
        T  mValue;
    };
}